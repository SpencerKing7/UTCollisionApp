// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UTCollisionApp.Models;

namespace UTCollisionApp.Migrations.CollisionDb
{
    [DbContext(typeof(CollisionDbContext))]
    partial class CollisionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UTCollisionApp.Models.Crash", b =>
                {
                    b.Property<int>("CRASH_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CRASH_DATETIME")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CRASH_SEVERITY_ID")
                        .HasColumnType("int");

                    b.Property<int>("FACTOR_ID")
                        .HasColumnType("int");

                    b.Property<int>("LOCATION_ID")
                        .HasColumnType("int");

                    b.HasKey("CRASH_ID");

                    b.HasIndex("FACTOR_ID");

                    b.HasIndex("LOCATION_ID");

                    b.ToTable("Crashes");
                });

            modelBuilder.Entity("UTCollisionApp.Models.Factor", b =>
                {
                    b.Property<int>("FACTOR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BICYCLIST_INVOLVED")
                        .HasColumnType("int");

                    b.Property<int>("COMMERCIAL_MOTOR_VEH_INVOLVED")
                        .HasColumnType("int");

                    b.Property<int>("DISTRACTED_DRIVING")
                        .HasColumnType("int");

                    b.Property<int>("DOMESTIC_ANIMAL_RELATED")
                        .HasColumnType("int");

                    b.Property<int>("DROWSY_DRIVING")
                        .HasColumnType("int");

                    b.Property<int>("DUI")
                        .HasColumnType("int");

                    b.Property<int>("IMPROPER_RESTRAINT")
                        .HasColumnType("int");

                    b.Property<int>("INTERSECTION_RELATED")
                        .HasColumnType("int");

                    b.Property<int>("MOTORCYCLE_INVOLVED")
                        .HasColumnType("int");

                    b.Property<int>("NIGHT_DARK_CONDITION")
                        .HasColumnType("int");

                    b.Property<int>("OLDER_DRIVER_INVOLVED")
                        .HasColumnType("int");

                    b.Property<int>("OVERTURN_ROLLOVER")
                        .HasColumnType("int");

                    b.Property<int>("PEDESTRIAN_INVOLVED")
                        .HasColumnType("int");

                    b.Property<int>("ROADWAY_DEPARTURE")
                        .HasColumnType("int");

                    b.Property<int>("SINGLE_VEHICLE")
                        .HasColumnType("int");

                    b.Property<int>("TEENAGE_DRIVER_INVOLVED")
                        .HasColumnType("int");

                    b.Property<int>("UNRESTRAINED")
                        .HasColumnType("int");

                    b.Property<int>("WILD_ANIMAL_RELATED")
                        .HasColumnType("int");

                    b.Property<int>("WORK_ZONE_RELATED")
                        .HasColumnType("int");

                    b.HasKey("FACTOR_ID");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("UTCollisionApp.Models.Location", b =>
                {
                    b.Property<int>("LOCATION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CITY")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("COUNTY_NAME")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("LAT_UTM_Y")
                        .HasColumnType("float");

                    b.Property<float>("LONG_UTM_X")
                        .HasColumnType("float");

                    b.Property<string>("MAIN_ROAD_NAME")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("MILEPOINT")
                        .HasColumnType("float");

                    b.Property<string>("ROUTE")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LOCATION_ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("UTCollisionApp.Models.Crash", b =>
                {
                    b.HasOne("UTCollisionApp.Models.Factor", "Factor")
                        .WithMany()
                        .HasForeignKey("FACTOR_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UTCollisionApp.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LOCATION_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
